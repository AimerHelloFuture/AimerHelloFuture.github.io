<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Boyoung</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-12-11T13:11:29.636Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Boyoung</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VS中scanf函数说明</title>
    <link href="http://yoursite.com/2015/08/02/VS%E4%B8%ADscanf%E5%87%BD%E6%95%B0%E8%AF%B4%E6%98%8E/"/>
    <id>http://yoursite.com/2015/08/02/VS中scanf函数说明/</id>
    <published>2015-08-02T11:51:45.000Z</published>
    <updated>2016-12-11T13:11:29.636Z</updated>
    
    <content type="html">&lt;p&gt;众所周知，由于安全原因，vs2012版本及其以上会出现scanf函数报错的情形，编译时便会提示如下错误&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;error C4996: ‘scanf’: This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;错误解释：&lt;/p&gt;
&lt;p&gt;微软该种类型报错主要因为那些C库的函数，很多函数内部是不进行参数检测的（包括越界类的），微软担心使用这些会造成内存异常，所以就改写了同样功能的函数，改写了的函数进行了参数的检测，使用这些新的函数会更安全和便捷。关于这些改写的函数你不用专门去记忆，因为编译器对于每个函数在给出警告时，都会告诉你相应的安全函数，查看警告信息就可以获知，在使用时也再查看一下MSDN详细了解。&lt;/p&gt;
&lt;h3 id=&quot;一般来说，直接解决该问题方法有三种：&quot;&gt;&lt;a href=&quot;#一般来说，直接解决该问题方法有三种：&quot; class=&quot;headerlink&quot; title=&quot;一般来说，直接解决该问题方法有三种：&quot;&gt;&lt;/a&gt;一般来说，直接解决该问题方法有三种：&lt;/h3&gt;&lt;p&gt;方法一：将原来的旧函数替换成新的 Security CRT functions，即替换成为新的函数scanf_s，但是scanf_s函数比scanf函数多了一个参数，即读取个数参数。例如scanf从输入流中读取一个字符类型字节,scanf(“%c”,&amp;amp;ch),则若使用scanf_s需改为scanf_s(“%c”,&amp;amp;ch,1);&lt;/p&gt;
&lt;p&gt;方法二：以下方法的原理为屏蔽这个错误：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在预编译头文件stdafx.h里（注意：一定要在没有include任何头文件之前）定义下面的宏：&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;#define _CRT_SECURE_NO_DEPRECATE
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;或声明 #param warning(disable:4996)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更改预处理定义：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;项目-&amp;gt;属性-&amp;gt;配置属性-&amp;gt;C/C++ -&amp;gt; 预处理器 -&amp;gt; 预处理器定义，增加：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;_CRT_SECURE_NO_DEPRECATE
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;第三种注意更改预处理定义时若在最后面加上该句话，需在这句话前面即未加之前最后面加上一个分号（在英文输入法模式下）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;方法三：方法二没有使用更加安全的 CRT 函数，显然不是一个值得推荐的好方法，但我们又不想一个一个地改函数名，这里还有一个更简便的方法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在预编译头文件 stdafx.h 里（同样要在没有include任何头文件之前）定义下面的宏：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;#define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES 1
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;在链接的时候便会自动将旧函数替换成 Security CRT functions 。&lt;/p&gt;
&lt;p&gt;注意：这个方法虽然使用了新的函数，但是不能消除警告，你还得同时使用方法二(-_-)。即实际应在预编译头文件 stdafx.h 里加入下面两句：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;#define _CRT_SECURE_NO_DEPRECATE

#define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;虽然解决了该报错问题，但是很多童鞋会发现运行时，scanf函数虽然并未报错，即该程序正确执行，但是在输入时，会发现scanf函数跳过输入字符的原因，即你没有办法输入的问题，这是为什么呢？&lt;/p&gt;
&lt;p&gt;因为scanf只是读入一个字符,而你在输入时实际上输入的是:字符+回车(Enter),Enter产生的”\n”也在输入缓冲区中,下次调用 scanf时就会直接读到 它而不是等待你再次输入!所以我们不提倡使用 scanf(“%c”, …),特别是不提倡把它用在循环中。这也是微软改写该类函数的原因，那么如何解决呢？&lt;/p&gt;
&lt;h3 id=&quot;一把来说，主要方法有四种：&quot;&gt;&lt;a href=&quot;#一把来说，主要方法有四种：&quot; class=&quot;headerlink&quot; title=&quot;一把来说，主要方法有四种：&quot;&gt;&lt;/a&gt;一把来说，主要方法有四种：&lt;/h3&gt;&lt;p&gt;方法一：只要再加一句scanf就行了。&lt;/p&gt;
&lt;p&gt;方法二：使用函数fflush，清除流，就是在每个接收字符的scanf语句前面,加上fflush(stdin);&lt;/p&gt;
&lt;p&gt;方法三：将 scanf(“%c”, &amp;amp;ch); 修改为:     scanf(“ %c”, &amp;amp;ch);    /&lt;em&gt;在%前加上一个空格&lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;方法四：将 scanf(“%c”, &amp;amp;ch); 修改为:     scanf(“%c%&lt;em&gt;c”, &amp;amp;ch);   %&lt;/em&gt;c是跳过一个输入字符的意思.这个是scanf的一个语法.就是在%和格式字符之间加一个&lt;em&gt;号就可以跳过这个输入数字.比如当执行语句:scanf(“%c,%&lt;/em&gt;c,%c”,&amp;amp;a,&amp;amp;b);时,我输入m,n,p三个字母后,a的值为m,b值为p,n被跳过了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;众所周知，由于安全原因，vs2012版本及其以上会出现scanf函数报错的情形，编译时便会提示如下错误
    
    </summary>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello Future</title>
    <link href="http://yoursite.com/2015/07/10/Hello-Future/"/>
    <id>http://yoursite.com/2015/07/10/Hello-Future/</id>
    <published>2015-07-10T04:10:26.000Z</published>
    <updated>2016-12-11T13:16:48.727Z</updated>
    
    <content type="html">&lt;p&gt;撒花撒花，博客搭好，当然要立一些flags啦！希望这个hexo博客能让我更加进步！&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;About-Me&quot;&gt;&lt;a href=&quot;#About-Me&quot; class=&quot;headerlink&quot; title=&quot;About Me&quot;&gt;&lt;/a&gt;About Me&lt;/h2&gt;&lt;h3 id=&quot;College&quot;&gt;&lt;a href=&quot;#College&quot; class=&quot;headerlink&quot; title=&quot;College&quot;&gt;&lt;/a&gt;College&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Huazhong University of Science and Technology.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Hobby&quot;&gt;&lt;a href=&quot;#Hobby&quot; class=&quot;headerlink&quot; title=&quot;Hobby&quot;&gt;&lt;/a&gt;Hobby&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Tennis, Music, Reading.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Dream-Flags&quot;&gt;&lt;a href=&quot;#Dream-Flags&quot; class=&quot;headerlink&quot; title=&quot;Dream? Flags!&quot;&gt;&lt;/a&gt;Dream? Flags!&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Le vent se lève, il faut tenter de vivre.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Maxim&quot;&gt;&lt;a href=&quot;#Maxim&quot; class=&quot;headerlink&quot; title=&quot;Maxim&quot;&gt;&lt;/a&gt;Maxim&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;以最小的代价完成生命各个维度的尝试。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;撒花撒花，博客搭好，当然要立一些flags啦！希望这个hexo博客能让我更加进步！
    
    </summary>
    
    
      <category term="essay" scheme="http://yoursite.com/tags/essay/"/>
    
  </entry>
  
</feed>
