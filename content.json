{"meta":{"title":"Boyoung","subtitle":null,"description":null,"author":"Boyoung","url":"//boyoung.me"},"posts":[{"title":"坂井泉水，负けないで","slug":"坂井泉水，负けないで","date":"2016-02-10T13:07:09.000Z","updated":"2016-12-14T03:00:45.413Z","comments":true,"path":"2016/02/10/坂井泉水，负けないで/","link":"","permalink":"//boyoung.me/2016/02/10/坂井泉水，负けないで/","excerpt":"\n\n\n致敬老姐永恒今年的2月10日是zard出道的第二十五年。怀念一下泉水姐姐。非要形容老姐的话，她的「永遠」可以描述这种感觉。没有一点刺激性，泉水一般的美人，给人的感觉非常舒服。","text":"致敬老姐永恒今年的2月10日是zard出道的第二十五年。怀念一下泉水姐姐。非要形容老姐的话，她的「永遠」可以描述这种感觉。没有一点刺激性，泉水一般的美人，给人的感觉非常舒服。 出淤泥而不染，濯清涟而不妖一位笔者将老姐的美分为“天性美”、“诗性美”等，当时看完后个人而言是非常同意的。因为你可以在她身上发现男性的潇洒帅气、女性的甜美坚强、孩子的淘气心性以及成人的豁达气质。中学时期，擅长运动，精通网球和长跑，神奈川长跑比赛破女子纪录。曾在早期说自己给人的印象是冷。其实内心中是一个敏感，感情充沛的人～从她的歌词就可以看出来了。前期唱过的歌，个人非常喜欢不要认输，特别激励人心的一首歌。乐队成员在91年前后逐个离开，她一个人一直支撑着zard。对于工作，她曾经说过“从起床开始，自己的生活就和音乐紧密相关。”爱纪录生活中的一点一滴，将它们编入歌词，有很多写满记忆碎片的小本本。爱在深夜工作，早起困难户。不爱将工作局促于录音棚的空间，热爱于生活中寻找灵感。和她合作过的人，都赞叹她的敬业。对于生活，热爱摄影、油画、花环制作。经常去国外找灵感，去国外总爱流连各类画展。比较低调，几乎不参加采访和电视节目（特别是后期）。常常素颜单衣，扎着麻花。后来生病，依旧乐观。总觉得自己会康复，对病情不甚在意。后来的离开是一场意外。出淤泥而不染，濯清涟而不妖。足以形容她的一生。 音乐唱响一世无论你知不知道泉水姐姐，你必然听过她创作的歌曲。作为二次元爱好者来回答一下。中华小当家OP2《无法呼吸》（中华一番最喜欢的OP）灌篮高手ED4《My Friend》（不亚于《直到世界的尽头》的经典）名侦探柯南OP4《转动命运之轮》（最伟大的柯南片头曲之一）名侦探柯南OP15《星之光芒》名侦探柯南OP21《光辉的信念》名侦探柯南OP22《爱在黑暗中》名侦探柯南ED17《梦见明天》名侦探柯南ED24《好悲伤，却依旧喜欢你》名侦探柯南M2《仿佛回到少女时代》名侦探柯南M9《等待夏日的航帆》名侦探柯南M12《展开双翼》龙珠GT OP原作词、翻唱《DAN DAN 渐渐被你吸引龙珠GT ED《Don’t You See》 负けないで！ 简单提及一下老姐的词吧。 「もう少し，あと少し…」： きまぐれな九月の雨に（反反复复九月的雨中）白い傘の少女がすれ違う（撑着白伞的少女擦肩而过） 「負けないで」： ふとした瞬間に視線がぶつかる（偶然的一瞬间与你四目相接） 「マイ フレンド」： いつも輝いていたね 少年のまま 瞳はMy friend（少年时代 曾经一直闪耀的你的明眸 My friend）あなたを想うだけで 心は強くなれた（只要想起你 内心就会变得坚强）ずっと見つめてるから 走り続けて（我会一直注视着你 所以请继续勇往直前） 还有永远。歌词总是最能反映创作者心灵的。姐姐的声音是能给人带来希望的。这也是我喜欢听日文歌的原因。能带来共鸣。姐姐走了。大概上帝不愿意让她变老。希望姐姐永远年轻漂亮。希望姐姐永远坚强。希望自己永远坚强。希望老姐和zard精神不灭。","raw":null,"content":null,"categories":[],"tags":[{"name":"essay","slug":"essay","permalink":"//boyoung.me/tags/essay/"},{"name":"坂井泉水","slug":"坂井泉水","permalink":"//boyoung.me/tags/坂井泉水/"},{"name":"追忆","slug":"追忆","permalink":"//boyoung.me/tags/追忆/"}]},{"title":"VS中scanf函数说明","slug":"VS中scanf函数说明","date":"2015-08-02T11:51:45.000Z","updated":"2016-12-11T13:11:29.636Z","comments":true,"path":"2015/08/02/VS中scanf函数说明/","link":"","permalink":"//boyoung.me/2015/08/02/VS中scanf函数说明/","excerpt":"众所周知，由于安全原因，vs2012版本及其以上会出现scanf函数报错的情形，编译时便会提示如下错误","text":"众所周知，由于安全原因，vs2012版本及其以上会出现scanf函数报错的情形，编译时便会提示如下错误： error C4996: ‘scanf’: This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. 错误解释： 微软该种类型报错主要因为那些C库的函数，很多函数内部是不进行参数检测的（包括越界类的），微软担心使用这些会造成内存异常，所以就改写了同样功能的函数，改写了的函数进行了参数的检测，使用这些新的函数会更安全和便捷。关于这些改写的函数你不用专门去记忆，因为编译器对于每个函数在给出警告时，都会告诉你相应的安全函数，查看警告信息就可以获知，在使用时也再查看一下MSDN详细了解。 一般来说，直接解决该问题方法有三种：方法一：将原来的旧函数替换成新的 Security CRT functions，即替换成为新的函数scanf_s，但是scanf_s函数比scanf函数多了一个参数，即读取个数参数。例如scanf从输入流中读取一个字符类型字节,scanf(“%c”,&amp;ch),则若使用scanf_s需改为scanf_s(“%c”,&amp;ch,1); 方法二：以下方法的原理为屏蔽这个错误： 在预编译头文件stdafx.h里（注意：一定要在没有include任何头文件之前）定义下面的宏： #define _CRT_SECURE_NO_DEPRECATE 或声明 #param warning(disable:4996) 更改预处理定义： 项目-&gt;属性-&gt;配置属性-&gt;C/C++ -&gt; 预处理器 -&gt; 预处理器定义，增加： _CRT_SECURE_NO_DEPRECATE 第三种注意更改预处理定义时若在最后面加上该句话，需在这句话前面即未加之前最后面加上一个分号（在英文输入法模式下）。 方法三：方法二没有使用更加安全的 CRT 函数，显然不是一个值得推荐的好方法，但我们又不想一个一个地改函数名，这里还有一个更简便的方法： 在预编译头文件 stdafx.h 里（同样要在没有include任何头文件之前）定义下面的宏： #define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES 1 在链接的时候便会自动将旧函数替换成 Security CRT functions 。 注意：这个方法虽然使用了新的函数，但是不能消除警告，你还得同时使用方法二(-_-)。即实际应在预编译头文件 stdafx.h 里加入下面两句： #define _CRT_SECURE_NO_DEPRECATE #define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES 1 虽然解决了该报错问题，但是很多童鞋会发现运行时，scanf函数虽然并未报错，即该程序正确执行，但是在输入时，会发现scanf函数跳过输入字符的原因，即你没有办法输入的问题，这是为什么呢？ 因为scanf只是读入一个字符,而你在输入时实际上输入的是:字符+回车(Enter),Enter产生的”\\n”也在输入缓冲区中,下次调用 scanf时就会直接读到 它而不是等待你再次输入!所以我们不提倡使用 scanf(“%c”, …),特别是不提倡把它用在循环中。这也是微软改写该类函数的原因，那么如何解决呢？ 一把来说，主要方法有四种：方法一：只要再加一句scanf就行了。 方法二：使用函数fflush，清除流，就是在每个接收字符的scanf语句前面,加上fflush(stdin); 方法三：将 scanf(“%c”, &amp;ch); 修改为: scanf(“ %c”, &amp;ch); /在%前加上一个空格/ 方法四：将 scanf(“%c”, &amp;ch); 修改为: scanf(“%c%c”, &amp;ch); %c是跳过一个输入字符的意思.这个是scanf的一个语法.就是在%和格式字符之间加一个号就可以跳过这个输入数字.比如当执行语句:scanf(“%c,%c,%c”,&amp;a,&amp;b);时,我输入m,n,p三个字母后,a的值为m,b值为p,n被跳过了。","raw":null,"content":null,"categories":[],"tags":[{"name":"blog","slug":"blog","permalink":"//boyoung.me/tags/blog/"}]},{"title":"Hexo博客","slug":"Hexo博客","date":"2015-07-11T13:07:09.000Z","updated":"2017-03-20T11:58:27.845Z","comments":true,"path":"2015/07/11/Hexo博客/","link":"","permalink":"//boyoung.me/2015/07/11/Hexo博客/","excerpt":"Hexo博客初建闲来无事，便打算给自己做一个个人网站，用于分享知识、记录心情的个人小站，最后喜欢上了hexo，这是初衷。","text":"Hexo博客初建闲来无事，便打算给自己做一个个人网站，用于分享知识、记录心情的个人小站，最后喜欢上了hexo，这是初衷。 具体的搭建方法也是参考的别人，具体详见使用hexo搭建个人网站。 我使用的主题为yelee，简洁、美观而又大方。具体的可以详细搜索做这个主题前端的大佬，可以详细参考下。 博客搭建好后，还可以绑定自己的域名，我使用的域名boyoung.me便是从阿里云购买的，详细绑定方法见GitHub Pages 绑定来自阿里云的域名。 Hexo简单使用1、new hexo new [layout] 新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。 2、generate hexo g 生成静态文件。 3、server hexo s 启动服务器。 4、deploy hexo g 部署网站。 5、clean hexo clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)。","raw":null,"content":null,"categories":[],"tags":[{"name":"blog","slug":"blog","permalink":"//boyoung.me/tags/blog/"},{"name":"环境搭配","slug":"环境搭配","permalink":"//boyoung.me/tags/环境搭配/"},{"name":"Hexo起始","slug":"Hexo起始","permalink":"//boyoung.me/tags/Hexo起始/"}]},{"title":"Hello Future","slug":"Hello-Future","date":"2015-07-10T04:10:26.000Z","updated":"2016-12-12T12:46:08.810Z","comments":true,"path":"2015/07/10/Hello-Future/","link":"","permalink":"//boyoung.me/2015/07/10/Hello-Future/","excerpt":"撒花撒花，博客搭好，当然要立一些flags啦！希望这个hexo博客能让我更加进步！","text":"撒花撒花，博客搭好，当然要立一些flags啦！希望这个hexo博客能让我更加进步！ About MeCollege Huazhong University of Science and Technology. Hobby Tennis, Music, Reading. Dream? Flags! Le vent se lève, il faut tenter de vivre. Maxim 以最小的代价完成生命各个维度的尝试。","raw":null,"content":null,"categories":[],"tags":[{"name":"essay","slug":"essay","permalink":"//boyoung.me/tags/essay/"}]}]}